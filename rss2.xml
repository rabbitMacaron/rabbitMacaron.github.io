<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Rabbit Macaron 개발 블로그</title>
    <link>http://rabbitMacaron.github.io/</link>
    
    <atom:link href="http://rabbitmacaron.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>개발 공부</description>
    <pubDate>Tue, 08 Feb 2022 20:17:09 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>02/08 공부기록!</title>
      <link>http://rabbitmacaron.github.io/2022/02/09/study-0208/</link>
      <guid>http://rabbitmacaron.github.io/2022/02/09/study-0208/</guid>
      <pubDate>Tue, 08 Feb 2022 16:51:16 GMT</pubDate>
      
        
        
      <description>&lt;br/&gt;
&lt;br/&gt;
&lt;h3&gt; 📚02/08&lt;/h3&gt;&lt;br/&gt;
✔ 매일 봤던 것들 정리하기&lt;br/&gt;
내가 공부하던 것, 질문받거나 질문했던 것까지 다 정리할거라 내용에 일관성은 없겠지만!!
정리하면서 한 번 더 보는 시간을 가져야지😃&lt;br/&gt;
&lt;br</description>
        
      
      
      
      <content:encoded><![CDATA[<br/><br/><h3> 📚02/08</h3><br/>✔ 매일 봤던 것들 정리하기<br/>내가 공부하던 것, 질문받거나 질문했던 것까지 다 정리할거라 내용에 일관성은 없겠지만!!정리하면서 한 번 더 보는 시간을 가져야지😃<br/><br/><br/> <br/><br/><h2>💬DBCP가 뭐예요?</h2>자바에서 DB 커넥션을 할 때 사용하는 방법 중 하나로,다른 방법들로는 JDBC, JNDI가 있다. <br/><br/>❔ Connection과 Connection pool<br/>DriveManager.getConnection()은 실제 프로그램과 데이터베이스를 네트워크상에서 연결해주는 메소드이다. Connection은 네트워크상의 연결 자체를 의미한다.<br/>Connection pool은 데이터베이스와 연결된 Connection객체를 사용하고 작업이 끝나면 다시 반환하는 것을 말한다. Connection pool을 사용하면 풀 속에 미리 Connection이 생성되어 있기 때문에 Connection을 생성하는 데 드는 연결시간이 소비되지않는다. 또, Connection 재사용이 가능하기 때문에 사용자가 접속할 때마다 계속해서 Connection을 생성할 필요가 없다. 즉, Connection pool을 사용 시 프로그램 효율과 성능이 전체적으로 증가한다.<br/><br/>❔ JDBC (Java DataBase Connectivity)란? <br/>자바와 데이터베이스의 DBMS를 연결시켜주는 응용프로그램 인터페이스이다.<br/>데이터베이스의 DBMS 종류에 상관없이 독립적으로 사용이 가능하다는 장점이 있으며DB커넥션 방법 중 기본이라고 할 수 있다. <br/>데이터베이스풀 방식을 사용하지않고 DB에서 정보를 가져올 때마다 매번 디비 연결을 열고 닫는 방식을 사용한다. 이 방식은 각 페이지에 database통신이 필요한 부분이 있을 때마다 디비 객체 생성, 커넥션 연결, 종료 등을 반복하기 때문에 효율성이 떨어진다는 단점이 있어 기본이 되긴해도 잘 사용되지않는다.<br/><br/>❔ DBCP (DataBase Connection Pool)란? <br/>DB와 커넥션을 맺고 있는 객체를 관리하는 역할을 한다.어플리케이션을 시작할 때 원하는만큼 커넥션객체를 만들어서 pool에 넣어놓았다가 필요할 때 갖다쓰고 pool에 반납하는 방식을 사용한다. <br/>다중스레드를 스레드풀로 관리하는 것과 비슷한 방식이다. <br/>상용 어플리케이션에는 보통 pool방식을 사용한다. <br/><br/>❔ JNDI (Java Naming and Directory Interface)란? <br/>데이터베이스 커넥션 풀을 이용하는 방식으로, DBCP는 DB커넥션 풀을 어플리케이션 소스단에 설정해놓은 방식이지만 JNDI는 WAS단에 DB커넥션풀을 미리 네이밍 해두는 방식을 사용한다.<br/>이와 같은 방식은, DB설정 정보 파악이 쉽고 DB 커넥션풀을 효율적으로 사용할 수 있다. <br/><span style="color:skyblue;">Reference.</span><br/>https://zunoxi.tistory.com/58  <br/>https://eongeuni.tistory.com/43  <br/>모델2로 구현하는 자바 웹 프로그래밍 JSP 2.2&servlet 3.0<br/><br/><br/><br/><br/><h2>💬Servlet과 Controller는 같은 건가요?</h2>결론부터 말하자면 당연히.. 다르다. <br/>어떻게 해석하냐에 따라 동일하게 보일 수 있지만 원초적인 목적이 다르다. 컨트롤러는 다른 요청을 받고 처리결과를 어떤 화면에 전달해줄지 전달자 역할만 하고, 서블릿은 요청을 받는 건 동일하나 처리결과를 직접 화면으로 만들어서 전달한다. 그래서 컨트롤러는 전달해줄 html파일이 실제 필요하고 서블릿은 html파일이 필요없이 바로 화면을 리턴할 수 있다. 근데 서블릿은 코드가 너무 복잡하고 디버깅이 어려워서 잘 쓰이지않는다. 대신 서블릿의 단점을 보완하고자 만든 서블릿 기반의 서버 스크립트 기술인 JSP를 사용한다. 이 jsp는 컨트롤러와 같이 쓰인다.<br/> <br/><span style="color:skyblue;">Reference.</span><br/>👍🏻직장동료<br/><br/><br/><h2>💬Javascript에서 변수 var 선언하지않아도 되는 이유?</h2>var 문으로 선언되지 않는 변수에 대입하면 오류가 발생하지 않는다. 이유는 자바스크립트가 해당 변수를 자동으로 전역 변수로 선언 하기 때문인데<span style="color:gray;">(변수의 의도하지 않은 전역화)</span>, 이는 함수의 유효 범위와 관련이 있다. <br/><br/><blockquote><p><span style="color:yellow;">그렇다면 전역변수 사용은… 괜찮을까?</span> <br/><br />   전역변수를 반드시 사용해야할 이유가 없다면 지역변수를 사용해야한다. </br></p><blockquote><p>❔전역 변수?<br/> 모든 영역에서 사용할 수 있는 변수이다. 함수 호출과 같이 전역 코드를 실행하는 특별한 진입점이 없고 코드가 로드되자마자 곧바로 해석되고 실행된다. <br/><br />브라우저 환경에서 전역 객체는 window이며 이 환경에서 var로 선언한 전역변수는 전역 객체 window의 프로퍼티다. 전역객체 window는 웹 페이지를 닫기전까지 유효하다. 즉, 전역객체의 생명주기와 일치한다.<br/><br />이러한 전역변수의 문제점은 📌전역변수는 모든 코드가 전역변수를 참조하고 변경할 수 있는 암묵적 결합을 허용한다. 즉 유효 범위가 크면 코드의 가독성이 나빠지고 의도치 않게 상태가 변경되어 위험성이 높아진다. 📌긴 생명주기 때문에 메모리 리소스도 오랜 기간 소비하고 상태 변경에 의한 오류가 발생할 확률이 높다. 📌스코프 체인 상에서 종점에 존재 하기 때문에 가장 마지막에 검색된다. 즉, 검색 속도가 가장 느리다. 📌자바스크립트의 문제 중 하나는 파일이 분리되어있다 해도 전역 스코프를 공유한다. 따라서 다른 파일 내에서 동일한 이름으로 전역 변수나 전역 함수를 재할당할 경우 예상치 못한 결과를 초래할 수 있다는 것이다. <br/></p></blockquote></blockquote><br/><p><span style="color:skyblue;">Reference.</span><br/><br /><a href="https://creatijin.tistory.com/241">https://creatijin.tistory.com/241</a>  <br/><br />행복해지는 HTML+CSS+JAVASCRIPT<br /><br/><br /><br/><br /><br/><br /><br/></p><h2>✏ Javascript 기초</h2><u>자바스크립트를 사용하는 이유</u>는 서버가 아닌 클라이언트에서 간단한 작업이 이루어지도록 하기 위한 것이다. <br/>html에서 script태그는 자바스크립트 전용 태그가 아니므로 language속성에 "javascript"를 작성해야한다. <u>작성법</u>은 3가지(head/body/외부파일(.js)로 source 속성이용)가 있다.  <br/><br/><pre>작성방법:1. head에 작성  head에 작성 시 다른 문장들에 비해 먼저 해석되어 처리된다.페이지 읽는 도중 중단될 경우 에러가 발생한다. 그래서 특별한 경우가 아니면 페이지 읽혀지기 전 수행되는 head영역에 자바스크립트를 기술한다.  <br/>2. body에 작성  일반적이진 않지만 body부분의 문장이 수행되는 도중에 자바스크립트 문장들이 반드시 기술되어야할 때 body영역에 자바스크립트를 기술한다.  <br/>3. 외부파일로 작성  자바스크립트로 구성된 내용을 완전히 다른 파일(.js)로 작성한다. 파일 작성 시 script태그는 html 문서 내에서 스크립트 구문이 시작되는 위치를 알려주는 html태그이므로 자바스크립트 파일에서는 제외한다.  html문서에 삽입하는 방법은 script 속성에서 src=".js"를 작성해주면 된다. 반복되는 내용일 경우 파일만 삽입하면 재사용이 가능하다는 장점이 있다.</pre><br/><u>자바스크립트 주석</u>은 <\!----> \을 제외하고 사용하면 된다. 자바스크립트를 사용하지않을 경우 코드가 그대로 노출될 수 있으므로 항상 주석을 같이 작성해주는 게 좋다. <br/> <br/>  <u>자료형</u>이란 사람과 컴퓨터(2진법으로만 구성) 사이의 차이를 극복하기 위해 사람과 컴퓨터 사이의 절충 선에서 사람들의 정보들을 간추려 정리한 것이다. 즉, 컴퓨터가 정보를 기억하고 처리하는 규칙을 지정하여 자료형으로 정의한 것. <br/>자료형에는 정수형, 실수형, 논리형, 문자형이 있다. <br/><table><thead><tr><th style="text-align:center">종류</th><th style="text-align:center">의미</th></tr></thead><tbody><tr><td style="text-align:center">정수형</td><td style="text-align:center">10진수, 8진수, 16진수</td></tr><tr><td style="text-align:center">실수형</td><td style="text-align:center">소수점을 가진 숫자(소수형/정수형 실수)</td></tr><tr><td style="text-align:center">논리형</td><td style="text-align:center">True, false</td></tr><tr><td style="text-align:center">문자형</td><td style="text-align:center">‘’ , “”</td></tr></tbody></table><p>그 외로 null형이 있는데 내용이 전혀 없을 때를 말한다. 주로 문자형에서 사용됨<br/><br/><br /><u>특수문자</u>  <br/></p><table><thead><tr><th style="text-align:center"><strong>이스케이프 시퀀스</strong></th><th style="text-align:center"><strong>의미</strong></th></tr></thead><tbody><tr><td style="text-align:center">\b</td><td style="text-align:center">커서를 앞으로 한 칸 이동. Basck space</td></tr><tr><td style="text-align:center">\f</td><td style="text-align:center">커서를 다음 페이지로 이동. Form Feed</td></tr><tr><td style="text-align:center">\n</td><td style="text-align:center">커서를 다음 줄로 이동. Newline</td></tr><tr><td style="text-align:center">\t</td><td style="text-align:center">커서를 한 탭만큼 이동. Tab</td></tr><tr><td style="text-align:center">\r</td><td style="text-align:center">커서를 그 줄의 처음으로 이동. Return</td></tr><tr><td style="text-align:center">’</td><td style="text-align:center">'표시</td></tr><tr><td style="text-align:center">&quot;</td><td style="text-align:center">&quot;표시</td></tr></tbody></table><br/><u>변수</u> <br/>네이밍규칙. 변수 시작은 영문자 or underBar(_). 숫자는 사용할 수 없다. 두번째 문자부터는 영문자, 숫자, underBar 모두 사용 가능하며 대소문자를 구분한다. 변수명을 구성하는 문자들 사이의 공백은 올 수 없고 두 단어 연결 시 underBar를 사용하여 표현한다. 미리 정해진 예약어(keyword)는 변수로 사용할 수 없다.<br/>변수를 사용만 하면 자동적으로 생성되므로 굳이 신경써서 선언하지않아도 된다. 자료형은 값을 대입하는 순간에 자동으로 결정된다. 명시적으로 사용할 경우, 자료형을 구분하지 않기 때문에 var로 선언한다. <br/><br/><u>연산자</u> <br/>산술연산자 : +, -, *, /, % <br/>관계연산자 : >, >=, <, <=, ==, != <br/> 논리연산자(Ture, false)가 있다. <br/><br/><table><thead><tr><th style="text-align:center">논리값</th><th style="text-align:center"><strong>!</strong>(논리부정)</th></tr></thead><tbody><tr><td style="text-align:center">T</td><td style="text-align:center">F</td></tr><tr><td style="text-align:center">F</td><td style="text-align:center">T</td></tr></tbody></table><table><thead><tr><th style="text-align:center">논리값1</th><th style="text-align:center">논리값2</th><th style="text-align:center"><strong>||</strong>(논리합)</th><th style="text-align:center"><strong>&amp;&amp;</strong>(논리곱)</th></tr></thead><tbody><tr><td style="text-align:center">T</td><td style="text-align:center">T</td><td style="text-align:center">T</td><td style="text-align:center">T</td></tr><tr><td style="text-align:center">T</td><td style="text-align:center">F</td><td style="text-align:center">T</td><td style="text-align:center">F</td></tr><tr><td style="text-align:center">F</td><td style="text-align:center">T</td><td style="text-align:center">T</td><td style="text-align:center">F</td></tr><tr><td style="text-align:center">F</td><td style="text-align:center">F</td><td style="text-align:center">F</td><td style="text-align:center">F</td></tr></tbody></table><br/><u>내장된 대화상자를 이용한 인터페이스</u> <br/>* alert <br/>경고메시지를 전달하기 위한 대화상자 표시. <br/>* confrim <br/>사용자의 확인을 받기위한 대화상자 표시. 반환값이 T이면 확인, F면 취소를 누르면 된다. 값은 answer = confirm() 이런식으로 변수에 담아서 사용. <br/>* prompt <br/>사용자로 내용을 입력받을 수 있는 대화상자 표시.<br/>메시지 : 대화상자에 나타날 설명 / 초기값 : 텍스트박스에 기본적으로 나타나는 문자열이나 숫자를 설정 / 반환값 : 텍스트박스에 입력된 내용. 문자열로 처리한다. name = prompt("이름을 입력하세요","") 이렇게 사용한다. 초기값에 아무런 내용이 없도록 하려면 ""을 작성하면 된다.<br/><br/><span style="color:skyblue;">Reference.</span><br/>행복해지는 HTML+CSS+JAVASCRIPT<br/>]]></content:encoded>
      
      
      
      
      <comments>http://rabbitmacaron.github.io/2022/02/09/study-0208/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>자바 진행단계 평가_기본 문제풀기</title>
      <link>http://rabbitmacaron.github.io/2021/10/04/Java-beginner-test/</link>
      <guid>http://rabbitmacaron.github.io/2021/10/04/Java-beginner-test/</guid>
      <pubDate>Mon, 04 Oct 2021 06:51:39 GMT</pubDate>
      
        
        
      <description>&lt;br/&gt;
&lt;br/&gt;
&lt;p&gt;&lt;em&gt;Java &amp;amp;SpringBoot로 시작하는 웹 프로그래밍 인강을 들으며&lt;br /&gt;
4주차에 있는 진행단계평가를 풀어보았다.&lt;br /&gt;
쉽지만 기본인 문제이니 한 번 풀어보자.&lt;br /&gt;
총 문제의 수는 10개이고</description>
        
      
      
      
      <content:encoded><![CDATA[<br/><br/><p><em>Java &amp;SpringBoot로 시작하는 웹 프로그래밍 인강을 들으며<br />4주차에 있는 진행단계평가를 풀어보았다.<br />쉽지만 기본인 문제이니 한 번 풀어보자.<br />총 문제의 수는 10개이고 ⭕️true ❌false 로 답하면 된다.</em><br /><br/><br /><br/></p><h3> 📎 문제 1 </h3> <br/><p>❝ 인스턴스란 클래스로부터 구현된 객체이며 스택 메모리에 생성된다 ❠  <br/><br/></p><details><summary>🔓 정답 및 해설</summary><div markdown="1">　　<span style="color:skyblue; font-size: 10pt"> 정답은 ❌이다. 인스턴스란 클래스로부터 구현된 객체이며 힙 메모리에 생성된다.</span>  <br/></div></details><br/><br/><br/><br/><h3> 📎 문제 2 </h3>  <br/><p>❝ 컴퓨터에서 자료를 표현하는 최소 단위는 바이트(Byte)다 ❠  <br/><br/></p><details><summary>🔓 정답 및 해설</summary><div markdown="1">　　<span style="color:skyblue; font-size: 10pt"> 정답은 ❌이다. 자료를 표현하는 최소 단위는 비트(Bit)이다. 바이트(Byte)는 8비트(Bit)이다. </span> <br/></div></details><br/><br/><br/><br/><h3> 📎 문제 3 </h3> <br/>&#10077; 상위 클래스의 메서드를 이름과 매개변수 등을 동일하게 유지하여 재정의 하는 것을 오버로딩이라고 한다 &#10080;  <br/><br/><details><summary>🔓 정답 및 해설</summary><div markdown="1">　　<span style="color:skyblue; font-size: 10pt"> 정답은 ❌이다. 오버로딩은 메서드명은 같지만 매개변수가 다른 것을 의미한다.<br/>　　이름과 매개변수 등을 동일하게 유지하여 재정의하는 것은 오버라이딩이다.</span> <br/></div></details><br/><br/><br/><br/><h3> 📎 문제 4 </h3> <br/>&#10077; 추상 메소드가 포함된 추상 클래스를 상속받은 모든 자식 클래스는 추상 메소드를 반드시 구현할 필요는 없다 &#10080;  <br/><br/><details><summary>🔓 정답 및 해설</summary><div markdown="1">　　<span style="color:skyblue; font-size: 10pt"> 정답은 ❌이다. 추상 메소드가 포함된 추상 클래스를 상속받은 모든 자식 클래스는 추상 메소드를 반드시 구현해야 한다.<br/> 　　그렇지않으면 에러가 발생하는데, 추상 메서드를 생성하거나 abstract class를 생성해야한다. </span> <br/></div></details><br/><br/><br/><br/><h3> 📎 문제 5 </h3> <br/>&#10077; 템플릿 메서드는 추상 메서드나 구현된 메서드를 활용하여 전체 흐름을 정의해 놓은 메서드를 말하는데요, <br/> 이 때 재정의 혹은 오버라이딩을 방지하기 위해서는 final 로 선언하여 재정의 할 수 없게 합니다 &#10080;  <br/><br/><details><summary>🔓 정답 및 해설</summary><div markdown="1">　　<span style="color:skyblue; font-size: 10pt"> 정답은 ⭕️이다. 정해진 순서대로 진행되어야하기 때문에 final을 써서 재정의를 방지한다. <br/> 　　final은 시스템관련, 메모리관련, 시나리오를 정의한 메서드 등에 주로 사용한다. </span> <br/></div></details><br/><br/><br/><br/><h3> 📎 문제 6 </h3> <br/>&#10077; 하위 클래스가 생성되는 과정 중 하위 클래스의 생성자에서는 무조건 상위 클래스의 생성자가 호출되어야 한다 &#10080;  <br/><br/><details><summary>🔓 정답 및 해설</summary><div markdown="1">　　<span style="color:skyblue; font-size: 10pt"> 정답은 ⭕️이다. 이 때 하위클래스에서는 super를 사용한다. </span> <br/></div></details><br/><br/><br/><br/><h3> 📎 문제 7 </h3> <br/>&#10077; break를 사용하여 반복문의 제어를 빠져 나올 수 있다 &#10080;  <br/><br/><details><summary>🔓 정답 및 해설</summary><div markdown="1">　　<span style="color:skyblue; font-size: 10pt"> 정답은 ⭕️이다. </span> <br/></div></details><br/><br/><br/><br/><h3> 📎 문제 8 </h3> <br/>&#10077; Java는 프로그래밍 언어의 일종이다 &#10080;  <br/><br/><details><summary>🔓 정답 및 해설</summary><div markdown="1">　　<span style="color:skyblue; font-size: 10pt"> 정답은 ⭕️이다. 프로그래밍 언어에는 Java, C, Python 등이 있다. </span> <br/></div></details><br/><br/><br/><br/><h3> 📎 문제 9 </h3> <br/>&#10077; B클래스가 A클래스를 상속했을 경우, B타입 변수에 A 인스턴스를 할당할 수 있다 &#10080;  <br/><br/><details><summary>🔓 정답 및 해설</summary><div markdown="1">　　<span style="color:skyblue; font-size: 10pt"> 정답은 ❌이다. A타입 변수에 B 인스턴스를 할당할 수 있다. </span> <br/></div></details><br/><br/><br/><br/>  <h3> 📎 문제 10 </h3> <br/>&#10077; 추상클래스는 new로 생성이 불가능하다 &#10080;  <br/><br/><details><summary>🔓 정답 및 해설</summary><div markdown="1">　　<span style="color:skyblue; font-size: 10pt"> 정답은 ⭕️이다. 추상클래스 내 추상메서드는 구현되지않은 경우도 존재하기에 인스턴스화 할 수 없다. </span> <br/></div></details><br/><br/><br/><br/><br/><br/><img src="/2021/10/04/Java-beginner-test/result.png" class="" title="result">   <br/>   <br/>   <p><em>더 빨리 풀었지만 혹시나하는 마음에 강의 들으며 기록해뒀던 것들을 참고하느라 오래 걸렸다…</em><br /><em>기본적인 내용이지만 다 맞아서 내심 뿌듯했는데… 어제 또 다시 생각이 많아졌다😥 힘내자!</em></p><br/><br/><br/>]]></content:encoded>
      
      
      
      
      <comments>http://rabbitmacaron.github.io/2021/10/04/Java-beginner-test/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>이클립스에서 git-receive-pack not permitted on 에러 발생 시 해결방법</title>
      <link>http://rabbitmacaron.github.io/2021/08/17/git-receive-pack/</link>
      <guid>http://rabbitmacaron.github.io/2021/08/17/git-receive-pack/</guid>
      <pubDate>Tue, 17 Aug 2021 13:10:10 GMT</pubDate>
      
        
        
      <description>&lt;img src=&quot;/2021/08/17/git-receive-pack/eclipse-gitError1.png&quot; class=&quot;&quot; title=&quot;Error1&quot;&gt;  
&lt;p&gt;💣Git에 push하다 갑자기 발생한 에러💣&lt;br /&gt;
&lt;br/&gt; &lt;br/&gt;&lt;/p&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<img src="/2021/08/17/git-receive-pack/eclipse-gitError1.png" class="" title="Error1">  <p>💣Git에 push하다 갑자기 발생한 에러💣<br /><br/> <br/></p><p><em>저번주까지 문제 없다가 갑자기 에러가 발생해서 너무 당황스러웠다.</em><br /><em>에러메세지를 보고 이클립스에 저장해뒀던</em><br /><em>Git ID/PW 정보를 다시 입력해보았지만 여전히 에러가 발생했다 …</em></p><br/><br/><br/><h2 id="️에러-원인"><a class="markdownIt-Anchor" href="#️에러-원인"></a> ✔️에러 원인</h2><img src="/2021/08/17/git-receive-pack/git_EMail.png" class="" title="GitMail"><p>Git Hub에서, Git 작업 인증 시 암호를 사용하는 인증은 더 이상 사용할 수 없고<br />곧 작동하지않을거라는 메일을 보냈었는데 확인을 못 했다…😥</p><br/><br/><br/><h2 id="해결방법"><a class="markdownIt-Anchor" href="#해결방법"></a> 🔧해결방법</h2><br/><p>이 문제의 해결방법은 이클립스에 저장해뒀던 Git 계정 정보를 수정하는 것이 맞다.<br />다만, 비밀번호가 아닌 개인토큰을 입력해야하므로<br />Personal Access Token을 생성해야한다.<br /><br/><br/></p><h2 id="1-settings-접근"><a class="markdownIt-Anchor" href="#1-settings-접근"></a> 1. Settings 접근</h2><img src="/2021/08/17/git-receive-pack/eclipse-gitError2.png" class="" title="Error2">   <ul><li>Git에 로그인 한 후, 프로필 클릭 &gt; Settings 에 접근한다.</li></ul> <br/>   <br/>    <h2 id="2-developer-settings-접근"><a class="markdownIt-Anchor" href="#2-developer-settings-접근"></a> 2. Developer settings 접근</h2><img src="/2021/08/17/git-receive-pack/eclipse-gitError3.png" class="" title="Error3"><ul><li>좌측에 있는 Developer settings 에 접근한다.<br /><br/><br /><br/></li></ul><h2 id="3-토큰-생성"><a class="markdownIt-Anchor" href="#3-토큰-생성"></a> 3. 토큰 생성</h2><img src="/2021/08/17/git-receive-pack/eclipse-gitError4.png" class="" title="Error4">  <p><em>(해당 사진 이후의 사진들은, 이미 토큰 생성 후 캡쳐했기 때문에 화면에 차이가 있다!!!)</em></p><ul><li>좌측의 Personal access tokens &gt; Generate new token 버튼을 클릭한다.<br /><em>버튼을 클릭하면, 본인 확인을 위해 비밀번호를 입력하는 창이 뜬다.</em><br /><br/><br /><br/></li></ul><h2 id="4-토큰-정보-설정"><a class="markdownIt-Anchor" href="#4-토큰-정보-설정"></a> 4. 토큰 정보 설정</h2><img src="/2021/08/17/git-receive-pack/eclipse-gitError5.png" class="" title="Error5"><ul><li><p>Note : 토큰의 이름을 작성한다. (본인이 구분할만한 설명 혹은 용도를 작성하면 될 거 같다)<br />Select scopes : 항목들 중 허가할 권한을 선택한다</p></li><li><p>하단의 Generate token 버튼을 클릭한다.<br /><br/><br /><br/></p></li></ul><h2 id="5-생성된-토큰-확인"><a class="markdownIt-Anchor" href="#5-생성된-토큰-확인"></a> 5. 생성된 토큰 확인</h2><img src="/2021/08/17/git-receive-pack/eclipse-gitError6.png" class="" title="Error6"><ul><li>Personal Access Token이 생성되었다!!!  <em>(해당 화면과 다르게, token의 값이 화면에 보일 것이다.)</em><br />❗️<strong>생성된 토큰값은 다시 확인할 수 없으니 값을 복사하여 안전한 곳에 보관하자</strong>❗️<br /><br/><br /><br/></li></ul><h2 id="6-이클립스에-저장된-git계정-정보-수정"><a class="markdownIt-Anchor" href="#6-이클립스에-저장된-git계정-정보-수정"></a> 6. 이클립스에 저장된 Git계정 정보 수정</h2><img src="/2021/08/17/git-receive-pack/eclipse-gitError7.png" class="" title="Error7"><ul><li>이클립스로 돌아와서, 상단의 window &gt; preferences 에 접근한 후, General &gt; Security &gt; Contents 를 클릭한다.</li><li>GIT을 펼쳐서 저장해뒀던 GIT ID/PW를 삭제(delete)한다.<br /><br/><br /><br/></li></ul><h2 id="7-패스워드-대신-personal-token-입력"><a class="markdownIt-Anchor" href="#7-패스워드-대신-personal-token-입력"></a> 7. 패스워드 대신 personal token 입력</h2><img src="/2021/08/17/git-receive-pack/eclipse-gitError8.png" class="" title="Error8"><ul><li>다시 Git에 Push 혹은 Pull을 시도할 경우,<br />Git ID/PW를 입력하는 창이 호출된다. 이 때 Git ID와 personal token을 입력한다.</li></ul><br/><br/><br/><h3 id="해결-완료"><a class="markdownIt-Anchor" href="#해결-완료"></a> 해결 완료😊</h3><br/><br/>]]></content:encoded>
      
      
      
      
      <comments>http://rabbitmacaron.github.io/2021/08/17/git-receive-pack/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Hexo blog test</title>
      <link>http://rabbitmacaron.github.io/2021/07/25/%ED%85%8C%EC%8A%A4%ED%8A%B8/</link>
      <guid>http://rabbitmacaron.github.io/2021/07/25/%ED%85%8C%EC%8A%A4%ED%8A%B8/</guid>
      <pubDate>Sun, 25 Jul 2021 10:02:24 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;테스트&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#테스트&quot;&gt;&lt;/a&gt; 테스트&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://rabbitMacaron.github.io/&quot;&gt;Hexo blog&lt;/a&gt; !&lt;br /&gt;
갈 길이</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="테스트"><a class="markdownIt-Anchor" href="#테스트"></a> 테스트</h2><p><a href="https://rabbitMacaron.github.io/">Hexo blog</a> !<br />갈 길이 멀지만 한걸음부터ㅎㅎ</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$hexo</span> new post <span class="string">&#x27;포스트명&#x27;</span></span><br></pre></td></tr></table></figure><p>바로 포스팅되지만<br />_config.yml 에서 'post’가 아닌 'draft’로 변경해주면<br />초안으로 작성할 수 있다.<br />(초안으로 작성된 글은 로컬 서버에서만 확인 가능)</p>]]></content:encoded>
      
      
      
      
      <comments>http://rabbitmacaron.github.io/2021/07/25/%ED%85%8C%EC%8A%A4%ED%8A%B8/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Hello World</title>
      <link>http://rabbitmacaron.github.io/2021/07/25/hello-world/</link>
      <guid>http://rabbitmacaron.github.io/2021/07/25/hello-world/</guid>
      <pubDate>Sun, 25 Jul 2021 06:56:29 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</description>
        
      
      
      
      <content:encoded><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2><h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content:encoded>
      
      
      
      
      <comments>http://rabbitmacaron.github.io/2021/07/25/hello-world/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
